{"ast":null,"code":"var _jsxFileName = \"D:\\\\University Blogging Application\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Tabs, Tab, Spinner } from 'react-bootstrap';\nimport { useAuth } from '../context/AuthContext';\nimport BlogEditor from '../components/BlogEditor';\nimport BlogPost from '../components/BlogPost';\nimport { blogService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [posts, setPosts] = useState([]);\n  const [activeTab, setActiveTab] = useState('feed');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      setIsLoading(true);\n      const data = await blogService.getAllPosts();\n      setPosts(data);\n    } catch (error) {\n      console.error('Failed to fetch posts:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handlePostCreated = async postData => {\n    try {\n      const newPost = await blogService.createPost(postData);\n      setPosts([newPost, ...posts]);\n    } catch (error) {\n      console.error('Failed to create post:', error);\n      throw error;\n    }\n  };\n  const handleLike = async postId => {\n    try {\n      const updatedPost = await blogService.likePost(postId);\n      setPosts(posts.map(post => post.id === postId ? updatedPost : post));\n    } catch (error) {\n      console.error('Failed to like post:', error);\n    }\n  };\n  const handleComment = async comment => {\n    // Comment is handled within CommentSection component\n    fetchPosts(); // Refresh posts to get updated comment count\n  };\n  const myPosts = posts.filter(post => {\n    var _post$author;\n    return ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.id) === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"py-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        className: \"mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          activeKey: activeTab,\n          onSelect: k => setActiveTab(k),\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"feed\",\n            title: \"Feed\",\n            children: [/*#__PURE__*/_jsxDEV(BlogEditor, {\n              onPostCreated: handlePostCreated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center my-5\",\n              children: /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                role: \"status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"visually-hidden\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this) : posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(BlogPost, {\n              post: post,\n              onLike: handleLike,\n              onComment: handleComment,\n              currentUser: currentUser\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"No posts yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Be the first to create a post!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            eventKey: \"my-posts\",\n            title: \"My Posts\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-3\",\n              children: \"My Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), myPosts.length > 0 ? myPosts.map(post => /*#__PURE__*/_jsxDEV(BlogPost, {\n              post: post,\n              onLike: handleLike,\n              onComment: handleComment,\n              currentUser: currentUser\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"You haven't created any posts yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Create your first post to get started!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"xinjDlAEzY54EEDgFwk2ANKE5bc=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Tabs","Tab","Spinner","useAuth","BlogEditor","BlogPost","blogService","jsxDEV","_jsxDEV","Dashboard","_s","currentUser","posts","setPosts","activeTab","setActiveTab","isLoading","setIsLoading","fetchPosts","data","getAllPosts","error","console","handlePostCreated","postData","newPost","createPost","handleLike","postId","updatedPost","likePost","map","post","id","handleComment","comment","myPosts","filter","_post$author","author","fluid","className","children","lg","fileName","_jsxFileName","lineNumber","columnNumber","activeKey","onSelect","k","eventKey","title","onPostCreated","animation","role","length","onLike","onComment","_c","$RefreshReg$"],"sources":["D:/University Blogging Application/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Tabs, Tab, Spinner } from 'react-bootstrap';\nimport { useAuth } from '../context/AuthContext';\nimport BlogEditor from '../components/BlogEditor';\nimport BlogPost from '../components/BlogPost';\nimport { blogService } from '../services/api';\n\nfunction Dashboard() {\n  const { currentUser } = useAuth();\n  const [posts, setPosts] = useState([]);\n  const [activeTab, setActiveTab] = useState('feed');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      setIsLoading(true);\n      const data = await blogService.getAllPosts();\n      setPosts(data);\n    } catch (error) {\n      console.error('Failed to fetch posts:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePostCreated = async (postData) => {\n    try {\n      const newPost = await blogService.createPost(postData);\n      setPosts([newPost, ...posts]);\n    } catch (error) {\n      console.error('Failed to create post:', error);\n      throw error;\n    }\n  };\n\n  const handleLike = async (postId) => {\n    try {\n      const updatedPost = await blogService.likePost(postId);\n      setPosts(posts.map(post => post.id === postId ? updatedPost : post));\n    } catch (error) {\n      console.error('Failed to like post:', error);\n    }\n  };\n\n  const handleComment = async (comment) => {\n    // Comment is handled within CommentSection component\n    fetchPosts(); // Refresh posts to get updated comment count\n  };\n\n  const myPosts = posts.filter(post => post.author?.id === currentUser?.id);\n\n  return (\n    <Container fluid className=\"py-4\">\n      <Row>\n        <Col lg={8} className=\"mx-auto\">\n          <h2 className=\"mb-4\">Dashboard</h2>\n          \n          <Tabs\n            activeKey={activeTab}\n            onSelect={(k) => setActiveTab(k)}\n            className=\"mb-3\"\n          >\n            <Tab eventKey=\"feed\" title=\"Feed\">\n              <BlogEditor onPostCreated={handlePostCreated} />\n              \n              {isLoading ? (\n                <div className=\"text-center my-5\">\n                  <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                  </Spinner>\n                </div>\n              ) : posts.length > 0 ? (\n                posts.map(post => (\n                  <BlogPost\n                    key={post.id}\n                    post={post}\n                    onLike={handleLike}\n                    onComment={handleComment}\n                    currentUser={currentUser}\n                  />\n                ))\n              ) : (\n                <div className=\"text-center py-5\">\n                  <h4>No posts yet</h4>\n                  <p>Be the first to create a post!</p>\n                </div>\n              )}\n            </Tab>\n            \n            <Tab eventKey=\"my-posts\" title=\"My Posts\">\n              <h4 className=\"mb-3\">My Posts</h4>\n              {myPosts.length > 0 ? (\n                myPosts.map(post => (\n                  <BlogPost\n                    key={post.id}\n                    post={post}\n                    onLike={handleLike}\n                    onComment={handleComment}\n                    currentUser={currentUser}\n                  />\n                ))\n              ) : (\n                <div className=\"text-center py-5\">\n                  <h4>You haven't created any posts yet</h4>\n                  <p>Create your first post to get started!</p>\n                </div>\n              )}\n            </Tab>\n          </Tabs>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}