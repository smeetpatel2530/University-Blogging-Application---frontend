{"ast":null,"code":"var _jsxFileName = \"D:\\\\University Blogging Application\\\\frontend\\\\src\\\\pages\\\\CommunityFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Spinner, Alert } from 'react-bootstrap';\nimport { useAuth } from '../context/AuthContext';\nimport BlogPost from '../components/BlogPost';\nimport { blogService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommunityFeed() {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      setIsLoading(true);\n      setError('');\n      const data = await blogService.getAllPosts();\n      setPosts(data);\n    } catch (error) {\n      console.error('Failed to fetch posts:', error);\n      setError('Failed to fetch posts. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLike = async postId => {\n    // Optimistic UI update for a faster feel\n    const originalPosts = [...posts];\n    const updatedPosts = posts.map(p => {\n      if (p.id === postId) {\n        const isLiked = p.likedByUserIds.includes(currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n        const newLikedIds = isLiked ? p.likedByUserIds.filter(id => id !== currentUser.id) : [...p.likedByUserIds, currentUser.id];\n        return {\n          ...p,\n          likedByUserIds: newLikedIds,\n          likeCount: newLikedIds.length\n        };\n      }\n      return p;\n    });\n    setPosts(updatedPosts);\n\n    // Actual API call\n    try {\n      await blogService.likePost(postId);\n    } catch (error) {\n      console.error('Failed to like post:', error);\n      // Rollback on error\n      setPosts(originalPosts);\n    }\n  };\n  const handleComment = () => {\n    // Re-fetch posts to get the latest comment count\n    fetchPosts();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"py-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        className: \"mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-4 text-center\",\n          children: \"Community Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-muted mb-5\",\n          children: \"See what everyone in the DTU community is talking about.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center my-5\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(BlogPost, {\n          post: post,\n          onLike: handleLike,\n          onComment: handleComment,\n          currentUser: currentUser\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No posts yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Be the first to create a post from your dashboard!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunityFeed, \"iYx9ALTiTwcQE8Eq1S3pFXOA1pA=\", false, function () {\n  return [useAuth];\n});\n_c = CommunityFeed;\nexport default CommunityFeed;\nvar _c;\n$RefreshReg$(_c, \"CommunityFeed\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Spinner","Alert","useAuth","BlogPost","blogService","jsxDEV","_jsxDEV","CommunityFeed","_s","currentUser","posts","setPosts","isLoading","setIsLoading","error","setError","fetchPosts","data","getAllPosts","console","handleLike","postId","originalPosts","updatedPosts","map","p","id","isLiked","likedByUserIds","includes","newLikedIds","filter","likeCount","length","likePost","handleComment","fluid","className","children","lg","fileName","_jsxFileName","lineNumber","columnNumber","animation","role","variant","post","onLike","onComment","_c","$RefreshReg$"],"sources":["D:/University Blogging Application/frontend/src/pages/CommunityFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Spinner, Alert } from 'react-bootstrap';\nimport { useAuth } from '../context/AuthContext';\nimport BlogPost from '../components/BlogPost';\nimport { blogService } from '../services/api';\n\nfunction CommunityFeed() {\n  const { currentUser } = useAuth();\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      setIsLoading(true);\n      setError('');\n      const data = await blogService.getAllPosts();\n      setPosts(data);\n    } catch (error) {\n      console.error('Failed to fetch posts:', error);\n      setError('Failed to fetch posts. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLike = async (postId) => {\n    // Optimistic UI update for a faster feel\n    const originalPosts = [...posts];\n    const updatedPosts = posts.map(p => {\n        if (p.id === postId) {\n            const isLiked = p.likedByUserIds.includes(currentUser?.id);\n            const newLikedIds = isLiked \n                ? p.likedByUserIds.filter(id => id !== currentUser.id)\n                : [...p.likedByUserIds, currentUser.id];\n            return { ...p, likedByUserIds: newLikedIds, likeCount: newLikedIds.length };\n        }\n        return p;\n    });\n    setPosts(updatedPosts);\n\n    // Actual API call\n    try {\n        await blogService.likePost(postId);\n    } catch (error) {\n        console.error('Failed to like post:', error);\n        // Rollback on error\n        setPosts(originalPosts);\n    }\n  };\n\n  const handleComment = () => {\n    // Re-fetch posts to get the latest comment count\n    fetchPosts(); \n  };\n\n\n  return (\n    <Container fluid className=\"py-4\">\n      <Row>\n        <Col lg={8} className=\"mx-auto\">\n          <h1 className=\"mb-4 text-center\">Community Feed</h1>\n          <p className=\"text-center text-muted mb-5\">See what everyone in the DTU community is talking about.</p>\n\n          {isLoading ? (\n            <div className=\"text-center my-5\">\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </Spinner>\n            </div>\n          ) : error ? (\n            <Alert variant=\"danger\">{error}</Alert>\n          ) : posts.length > 0 ? (\n            posts.map(post => (\n              <BlogPost\n                key={post.id}\n                post={post}\n                onLike={handleLike}\n                onComment={handleComment}\n                currentUser={currentUser}\n              />\n            ))\n          ) : (\n            <div className=\"text-center py-5\">\n              <h4>No posts yet</h4>\n              <p>Be the first to create a post from your dashboard!</p>\n            </div>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default CommunityFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}