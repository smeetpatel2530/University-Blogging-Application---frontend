{"ast":null,"code":"var _jsxFileName = \"D:\\\\University Blogging Application\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in\n    const user = authService.getCurrentUser();\n    if (user) {\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    const response = await authService.login({\n      username,\n      password\n    });\n    setCurrentUser(response);\n    return response;\n  };\n  const register = async userData => {\n    const response = await authService.register(userData);\n    return response;\n  };\n  const logout = () => {\n    authService.logout();\n    setCurrentUser(null);\n  };\n  const updateUser = userData => {\n    const updatedUser = {\n      ...currentUser,\n      ...userData\n    };\n    setCurrentUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","user","getCurrentUser","login","username","password","response","register","userData","logout","updateUser","updatedUser","localStorage","setItem","JSON","stringify","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/University Blogging Application/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authService } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in\n    const user = authService.getCurrentUser();\n    if (user) {\n      setCurrentUser(user);\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (username, password) => {\n    const response = await authService.login({ username, password });\n    setCurrentUser(response);\n    return response;\n  };\n\n  const register = async (userData) => {\n    const response = await authService.register(userData);\n    return response;\n  };\n\n  const logout = () => {\n    authService.logout();\n    setCurrentUser(null);\n  };\n\n  const updateUser = (userData) => {\n    const updatedUser = { ...currentUser, ...userData };\n    setCurrentUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASQ,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,IAAI,GAAGb,WAAW,CAACc,cAAc,CAAC,CAAC;IACzC,IAAID,IAAI,EAAE;MACRH,cAAc,CAACG,IAAI,CAAC;IACtB;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,MAAMC,QAAQ,GAAG,MAAMlB,WAAW,CAACe,KAAK,CAAC;MAAEC,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAChEP,cAAc,CAACQ,QAAQ,CAAC;IACxB,OAAOA,QAAQ;EACjB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,MAAMF,QAAQ,GAAG,MAAMlB,WAAW,CAACmB,QAAQ,CAACC,QAAQ,CAAC;IACrD,OAAOF,QAAQ;EACjB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBrB,WAAW,CAACqB,MAAM,CAAC,CAAC;IACpBX,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMY,UAAU,GAAIF,QAAQ,IAAK;IAC/B,MAAMG,WAAW,GAAG;MAAE,GAAGd,WAAW;MAAE,GAAGW;IAAS,CAAC;IACnDV,cAAc,CAACa,WAAW,CAAC;IAC3BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMK,KAAK,GAAG;IACZnB,WAAW;IACXM,KAAK;IACLI,QAAQ;IACRE,MAAM;IACNC;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B;AAACzB,GAAA,CAhDeF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}